import React, { useEffect, useState, useContext } from 'react'
import { ShopContext } from '../context/ShopContext'
import Title from '../components/Title';

const Orders = () => {
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const { getStatusColor } = useContext(ShopContext);


  const fetchOrders = async () => {
    try {
      const res = await fetch('/outlet/backend/public/api/order.php');
      const data = await res.json();

      if (!res.ok) throw new Error(data.error || 'Błąd podczas pobierania zamówień');

      setOrders(data);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchOrders();
  }, []);

  return (

    //   <h1 className="text-2xl font-bold mb-6">Twoje zamówienia</h1>

    //     { loading && <p>Ładowanie zamówień...</p> }
    // { error && <p className="text-red-600">{error}</p> }
    // { !loading && orders.length === 0 && <p>Nie masz jeszcze żadnych zamówień.</p> }

    // {
    //   orders.length > 0 && (
    //     <div className="flex flex-col gap-4">
    //       {orders.map((item, index) => (
    //         <div key={index} className="border p-4 shadow-sm rounded">
    //           <p className="text-sm text-gray-500">Data: {new Date(item.created_at).toLocaleString()}</p>
    //           <p className="text-lg font-semibold">{item.name}</p>
    //           <p>Ilość: {item.quantity}</p>
    //           <p>Cena: {(item.price * item.quantity).toFixed(2)} zł</p>
    //         </div>
    //       ))}
    //     </div>
    //   )
    // }

    <div className='border-t pt-16'>

      <div className='text-2xl'>
        <Title text1={'MOJE'} text2={'ZAMÓWIENIA'} />
      </div>

      {loading && <p>Ładowanie zamówień...</p>}
      {error && <p className="text-red-600">{error}</p>}
      {!loading && orders.length === 0 && <p>Nie masz jeszcze żadnych zamówień.</p>}

      {orders.length > 0 && (
        <div>
          {orders.map((item, index) => (
            <div key={index} className='py-4 border-t border-b text-gray-700 flex flex-col md:flex-row md:items-center md:justify-between gap-4'>
              <div className='flex items-start gap-6 text-sm'>
                <img className='w-16 sm:w-12' src={item.image} alt="" />
                <div>
                  <p className='sm:text-base font-medium'>{item.name}</p>
                  <div className='flex items-center gap-3 mt-2 text-base text-gray-700 '>
                    <p className='text-lg'>{(item.price * item.quantity).toFixed(2)} zł </p>
                    <p>Ilość: 1</p>
                  </div>
                  <p className='mt-2'>Data złożenia zamówienia: <span className='text-gray-400'>{new Date(item.created_at).toLocaleString()}</span></p>
                </div>
              </div>
              <div className='md:w-1/2 flex justify-between'>
                <div className='flex items-center gap-2'>
                  <p className={`w-2 h-2 rounded-full ${getStatusColor(item.status)}`}></p>
                  <p className='text-sm md:text-base '>{item.status}</p>
                </div>
                {/* <button className='border px-4 py-2 text-sm font-medium rounded-sm'>Szczegóły</button> */}
              </div>
            </div>

            
          ))
          }
        </div>
      )}

    </div>
  );
}

  export default Orders;
